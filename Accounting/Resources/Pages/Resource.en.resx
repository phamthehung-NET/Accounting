<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accounting" xml:space="preserve">
    <value>Accounting</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ActionDate" xml:space="preserve">
    <value>Action date</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="AddBillMeatFailed" xml:space="preserve">
    <value>Add product to bill failed</value>
  </data>
  <data name="AddItem" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="AddNewPerson" xml:space="preserve">
    <value>Add new person</value>
  </data>
  <data name="AddNewProduct" xml:space="preserve">
    <value>Add new product</value>
  </data>
  <data name="AddPersonFailed" xml:space="preserve">
    <value>Add new person failed</value>
  </data>
  <data name="AddPersonSuccess" xml:space="preserve">
    <value>Add new person success</value>
  </data>
  <data name="AddProductFailed" xml:space="preserve">
    <value>Add product failed</value>
  </data>
  <data name="AddProductSuccess" xml:space="preserve">
    <value>Add product successully</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="at" xml:space="preserve">
    <value>at</value>
  </data>
  <data name="Beef" xml:space="preserve">
    <value>Beef</value>
  </data>
  <data name="Bill" xml:space="preserve">
    <value>Bill</value>
  </data>
  <data name="BillIsCreated" xml:space="preserve">
    <value>Bill is created</value>
  </data>
  <data name="billwithprice" xml:space="preserve">
    <value>bill with prices</value>
  </data>
  <data name="Buffalo" xml:space="preserve">
    <value>Buffalo</value>
  </data>
  <data name="Buyer" xml:space="preserve">
    <value>Buyer</value>
  </data>
  <data name="Calves" xml:space="preserve">
    <value>Calves</value>
  </data>
  <data name="cannot contains alphabet digit(s)" xml:space="preserve">
    <value>cannot contains alphabet digit(s)</value>
  </data>
  <data name="changeTo" xml:space="preserve">
    <value>change to</value>
  </data>
  <data name="ChooseBillType" xml:space="preserve">
    <value>Choose bill type</value>
  </data>
  <data name="ChooseDate" xml:space="preserve">
    <value>Choose date</value>
  </data>
  <data name="ChooseMeat" xml:space="preserve">
    <value>Choose the product</value>
  </data>
  <data name="ChoosePerson" xml:space="preserve">
    <value>Choose person</value>
  </data>
  <data name="ClickToAdd" xml:space="preserve">
    <value>Click here to add</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CommonErrMsg" xml:space="preserve">
    <value>Something went wrong, please contact to developer for more detail</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created date</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteBillConfimation" xml:space="preserve">
    <value>Are you sure to move this bill to recycle bin?</value>
  </data>
  <data name="DeletePersonConfirmation" xml:space="preserve">
    <value>Are you sure to move this person to recycle bin?</value>
  </data>
  <data name="DeleteProductConfirmation" xml:space="preserve">
    <value>Are you sure to move this product to recycle bin?</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Confirm delete</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditItemPrice" xml:space="preserve">
    <value>Edit items price</value>
  </data>
  <data name="EditItemsPrice" xml:space="preserve">
    <value>Edit items price</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Edit person</value>
  </data>
  <data name="EditPriceFailed" xml:space="preserve">
    <value>Edit price failed</value>
  </data>
  <data name="EditPriceSuccess" xml:space="preserve">
    <value>Edit price successully</value>
  </data>
  <data name="EditProductFailed" xml:space="preserve">
    <value>Edit product failed</value>
  </data>
  <data name="EditProductInfo" xml:space="preserve">
    <value>Edit product infomation</value>
  </data>
  <data name="EditProductSuccess" xml:space="preserve">
    <value>Edit product successully</value>
  </data>
  <data name="EnterWeight" xml:space="preserve">
    <value>Enter weight</value>
  </data>
  <data name="EntryBill" xml:space="preserve">
    <value>Entry bill</value>
  </data>
  <data name="EntryList" xml:space="preserve">
    <value>Entry list</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Fresh" xml:space="preserve">
    <value>Fresh</value>
  </data>
  <data name="from" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="Frozen Meat" xml:space="preserve">
    <value>Frozen</value>
  </data>
  <data name="here" xml:space="preserve">
    <value>here</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="in" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="is required" xml:space="preserve">
    <value>is required</value>
  </data>
  <data name="item(s)" xml:space="preserve">
    <value>item(s)</value>
  </data>
  <data name="ItemDetail" xml:space="preserve">
    <value>Item detail</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>Activity log</value>
  </data>
  <data name="Log list" xml:space="preserve">
    <value>Log list</value>
  </data>
  <data name="LunarDate" xml:space="preserve">
    <value>Lunar date</value>
  </data>
  <data name="Manage entries" xml:space="preserve">
    <value>Manage entries</value>
  </data>
  <data name="Manage person" xml:space="preserve">
    <value>Manage person</value>
  </data>
  <data name="Manage Price" xml:space="preserve">
    <value>Manage price</value>
  </data>
  <data name="Manage product" xml:space="preserve">
    <value>Manage product</value>
  </data>
  <data name="Manage Sale" xml:space="preserve">
    <value>Manage sales</value>
  </data>
  <data name="ManagePriceTitle" xml:space="preserve">
    <value>Manage products price</value>
  </data>
  <data name="Meat" xml:space="preserve">
    <value>Meat</value>
  </data>
  <data name="Meat Type" xml:space="preserve">
    <value>Meat Type</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ModifiedHistory" xml:space="preserve">
    <value>Modified histories</value>
  </data>
  <data name="Move to recycle bin success" xml:space="preserve">
    <value>Move to recycle bin successfully</value>
  </data>
  <data name="Move to reycle bin failed" xml:space="preserve">
    <value>Move to reycle bin failed</value>
  </data>
  <data name="MoveToRecycleBin" xml:space="preserve">
    <value>Move to recycle bin</value>
  </data>
  <data name="must have 10 digits" xml:space="preserve">
    <value>must have 10 digits</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="named" xml:space="preserve">
    <value>named</value>
  </data>
  <data name="NearestTransaction" xml:space="preserve">
    <value>Nearest transaction</value>
  </data>
  <data name="NearestTransactionDetail" xml:space="preserve">
    <value>Nearest transaction detail</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="No data" xml:space="preserve">
    <value>No data</value>
  </data>
  <data name="Normal Meat" xml:space="preserve">
    <value>Fresh</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="or click" xml:space="preserve">
    <value>or click</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="PaidFailed" xml:space="preserve">
    <value>Paying bill failed</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="PayingBillConfimation" xml:space="preserve">
    <value>Are you sure to pay this bill?</value>
  </data>
  <data name="PayingTitle" xml:space="preserve">
    <value>Confirm payment</value>
  </data>
  <data name="PeopleList" xml:space="preserve">
    <value>People list</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PleseEnterWeight" xml:space="preserve">
    <value>Weight is required</value>
  </data>
  <data name="Product List" xml:space="preserve">
    <value>Product List</value>
  </data>
  <data name="Product Management" xml:space="preserve">
    <value>Product Management</value>
  </data>
  <data name="Product Type" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="ProductCommonError" xml:space="preserve">
    <value>An error has occurred. This application may no longer respond until reloaded.</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="Recycle bin" xml:space="preserve">
    <value>Recycle bin</value>
  </data>
  <data name="RecycleBinList" xml:space="preserve">
    <value>List items in recycle bin</value>
  </data>
  <data name="Redirecting to login in" xml:space="preserve">
    <value>Redirecting to login in</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveItem" xml:space="preserve">
    <value>Remove item</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="RestoreFailed" xml:space="preserve">
    <value>Current list is already exist a new item has the same properties, cannot restore</value>
  </data>
  <data name="RestoreSuccessfully" xml:space="preserve">
    <value>Restore item successfully</value>
  </data>
  <data name="RestoreTitle" xml:space="preserve">
    <value>Restore item</value>
  </data>
  <data name="SaleBill" xml:space="preserve">
    <value>Sale bill</value>
  </data>
  <data name="SaleList" xml:space="preserve">
    <value>Sale list</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search by name" xml:space="preserve">
    <value>Search by name</value>
  </data>
  <data name="Seller" xml:space="preserve">
    <value>Seller</value>
  </data>
  <data name="Showing" xml:space="preserve">
    <value>Showing</value>
  </data>
  <data name="ShowMore" xml:space="preserve">
    <value>Show more</value>
  </data>
  <data name="SuccessfullyAddBillMeat" xml:space="preserve">
    <value>Add product to bill successfully</value>
  </data>
  <data name="SuccessfullyAddBillPerson" xml:space="preserve">
    <value>Add bill successfully</value>
  </data>
  <data name="SucessfullyPaid" xml:space="preserve">
    <value>Bill is paid successfully</value>
  </data>
  <data name="ThisPersonIsExisted" xml:space="preserve">
    <value>Bill for this person is already existed, please check again</value>
  </data>
  <data name="Thousand Dong" xml:space="preserve">
    <value>thousand dong</value>
  </data>
  <data name="to" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="to Accounting Application" xml:space="preserve">
    <value>to Accounting Application</value>
  </data>
  <data name="Today Entry Price" xml:space="preserve">
    <value>Today Entry Price</value>
  </data>
  <data name="Today Sale Price" xml:space="preserve">
    <value>Today Sale Price</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unpaid" xml:space="preserve">
    <value>Unpaid</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateItemsPriceFailed" xml:space="preserve">
    <value>Update items price failed</value>
  </data>
  <data name="UpdateItemsPriceSuccessfully" xml:space="preserve">
    <value>Update items price successfully</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="ViewHistory" xml:space="preserve">
    <value>View history</value>
  </data>
  <data name="ViewNearestTransaction" xml:space="preserve">
    <value>View nearest transaction</value>
  </data>
  <data name="Wasted" xml:space="preserve">
    <value>Wasted</value>
  </data>
  <data name="WastedMeatWeight" xml:space="preserve">
    <value>Wasted meat weight</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Welcome Page" xml:space="preserve">
    <value>Welcome Page</value>
  </data>
  <data name="withPrice" xml:space="preserve">
    <value>with price</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Yesterday Entry Price" xml:space="preserve">
    <value>Yesterday Entry Price</value>
  </data>
  <data name="Yesterday Sale Price" xml:space="preserve">
    <value>Yesterday Sale Price</value>
  </data>
</root>