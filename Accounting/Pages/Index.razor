@* @page "/"
@page "/updatePrice"
@page "/unauthorized" *@

@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.Extensions.Localization;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IMeatRepository MeatRepository
@inject IJSRuntime JsRuntime
@inject UserManager<CustomUser> userManager
@inject IStringLocalizer<Resource> LRes

<PageTitle>@LRes["Home"]</PageTitle>

<div class="text-center">
    <h1>@LRes["Welcome"]</h1>

    @LRes["Welcome"] @LRes["to Accounting Application"]

    <button type="button" class="btn btn-outline-primary me-2" data-bs-toggle="modal" data-bs-target="#priceModal" hidden id="hiddenBtnPriceModal"></button>
    <div class="modal fade" id="priceModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
        <PriceList />
    </div>
</div>

@code{
    Uri Uri;

    protected override void OnInitialized()
    {
        Uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        var hasher = new PasswordHasher<string>();
        string password = "123456";

        // Hash password theo chuẩn ASP.NET Identity
        string hashedPassword = hasher.HashPassword(null, password);
        Console.WriteLine($"Hashed Password: {hashedPassword}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            if (user != null && user.Identity.IsAuthenticated && Uri.AbsolutePath.Equals(Constants.UpdatePrice))
            {
                var lastUpdatePriceDate = userManager.FindByNameAsync(user.Identity.Name).Result.UpdatedPriceDate;
                if (lastUpdatePriceDate.Date < DateTime.Today)
                {
                    await HelperFunctions.TriggerBtn(JsRuntime, "hiddenBtnPriceModal");
                    StateHasChanged();
                }
            }
        }
    }
}